{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactEl/ContactEl.module.css","components/Section/Section.module.css","components/ContactForm/ContactForm.module.css","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactEl/ContactEl.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactList/contacts.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","protoType","PropTypes","node","string","ContactForm","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","id","shortid","generate","reset","this","form","inputName","type","autoComplete","onChange","inputNumber","btn","Component","ContactEl","contact","ContactList","contacts","onDeleteContact","list","map","item","onClick","protoTypes","array","func","Filter","block","label","htmlFor","input","App","filter","addContact","data","alert","deleteContact","contactId","prevState","changeFilter","normalizeFilter","toLowerCase","filterContact","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3db4f493.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1cQvt\",\"item\":\"ContactList_item__1xFsE\",\"btn\":\"ContactList_btn__3JJOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__1A5RJ\",\"label\":\"Filter_label__2_je6\",\"input\":\"Filter_input__1J-d6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactEl_name__3IzbE\",\"number\":\"ContactEl_number__1CEK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1ELaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZHNdR\",\"name\":\"ContactForm_name__157x9\",\"inputName\":\"ContactForm_inputName__31Gmj\",\"number\":\"ContactForm_number__2YtkH\",\"inputNumber\":\"ContactForm_inputNumber__1mpv3\",\"btn\":\"ContactForm_btn__3_lzn\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <div className={s.section}>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n}\n\nSection.protoType = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit({ ...this.state, id: shortid.generate() });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.name}>\r\n          Name\r\n          <input\r\n            className={s.inputName}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className={s.number}>\r\n          Number\r\n          <input\r\n            className={s.inputNumber}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from './ContactEl.module.css';\r\n\r\nfunction ContactEl({ contact }) {\r\n  return (\r\n    <div>\r\n      <span className={s.name}>{contact.name}: </span>\r\n      <span className={s.number}>{contact.number}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactEl;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactEl from '../ContactEl';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <ContactEl contact={{ name, number }} />\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.protoTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <div className={s.block}>\r\n      <label className={s.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.protoTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","const contacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nexport default contacts;\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport contacts from './components/ContactList/contacts';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts,\r\n    filter: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    contacts: PropTypes.array,\r\n    filter: PropTypes.string,\r\n  };\r\n\r\n  // функция для получения данных из формы и добавдение в контакты\r\n\r\n  addContact = data => {\r\n    const { contacts } = this.state;\r\n    if (data.name === '') {\r\n      alert('eneter name');\r\n      return;\r\n    }\r\n    if (data.number === '') {\r\n      alert('eneter number');\r\n      return;\r\n    }\r\n\r\n    for (let contact of contacts) {\r\n      if (data.name === contact.name) {\r\n        alert(`${data.name} is already in contact`);\r\n        return;\r\n      }\r\n    }\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [data, ...contacts],\r\n    }));\r\n  };\r\n\r\n  // функция для удаления контактов\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  //  функция фильтрации контактов по имени\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  render() {\r\n    const normalizeFilter = this.state.filter.toLowerCase();\r\n    const { contacts } = this.state;\r\n    const filterContact = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter),\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <ContactForm onSubmit={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n          <ContactList\r\n            contacts={filterContact}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}